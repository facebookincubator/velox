<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <parent>
    <groupId>velox</groupId>
    <artifactId>velox-jni</artifactId>
    <version>0.0.1</version>
    <relativePath>../pom.xml</relativePath>
  </parent>
  <modelVersion>4.0.0</modelVersion>

  <artifactId>velox-jni-core</artifactId>

  <properties>
    <maven.compiler.source>8</maven.compiler.source>
    <maven.compiler.target>8</maven.compiler.target>
  </properties>

  <dependencies>


    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-catalyst_2.12</artifactId>
      <version>${spark.version}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-catalyst_2.12</artifactId>
      <version>${spark.version}</version>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-library</artifactId>
    </dependency>
    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-compiler</artifactId>
    </dependency>
    <dependency>
      <groupId>org.scalatest</groupId>
      <artifactId>scalatest_2.12</artifactId>
    </dependency>

    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.scalatestplus</groupId>
      <artifactId>scalacheck-1-15_${scala.binary.version}</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.scalatestplus</groupId>
      <artifactId>selenium-3-141_${scala.binary.version}</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <resources>
    <resource>
      <directory>${env.CMAKE_BINARY_DIR}/velox/jni/cpp</directory>
      <includes>
        <include>libjni.dylib</include>
        <include>libjni.so</include>
      </includes>
    </resource>
    </resources>
    <testResources>
      <testResource>
        <directory>${env.CMAKE_BINARY_DIR}/velox/jni/cpp</directory>
        <includes>
          <include>libjni.dylib</include>
          <include>libjni.so</include>
        </includes>
      </testResource>
    </testResources>


    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>3.0.0</version> <!-- Use the latest version available -->
        <executions>
          <execution>
            <phase>validate</phase> <!-- You can bind it to a different phase if needed -->
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <echo>SDK directory: ${project.basedir}/../../_build/velox/sdk</echo>
                <property name="sdk.dir" location="${project.basedir}/../../_build/velox/sdk"/>
                <echo>Resolved SDK directory: ${sdk.dir}</echo>
              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>net.alchim31.maven</groupId>
        <artifactId>scala-maven-plugin</artifactId>
        <version>3.2.1</version>
        <executions>
          <execution>
            <id>scala-compile-first</id>
            <phase>process-resources</phase>
            <goals>
              <goal>add-source</goal>
              <goal>compile</goal>
            </goals>
          </execution>
          <execution>
            <id>scala-test-compile</id>
            <phase>process-test-resources</phase>
            <goals>
              <goal>add-source</goal>
              <goal>testCompile</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>3.2.0</version> <!-- Use the appropriate version -->
        <executions>
          <execution>
            <goals>
              <goal>test-jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>3.2.1</version> <!-- Use the appropriate version -->
        <executions>
          <execution>
            <id>attach-sources</id>
            <goals>
              <goal>jar
              </goal> <!-- This goal binds to the package phase and creates a jar file containing the source code -->
            </goals>
          </execution>
          <execution>
            <id>attach-test-sources</id>
            <goals>
              <goal>test-jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.22.2</version>
        <configuration>
          <forkMode>always</forkMode>
          <forkCount>1</forkCount>
          <forkedProcessExitTimeoutInSeconds>10</forkedProcessExitTimeoutInSeconds>
          <reuseForks>false</reuseForks>
          <argLine>-Dfile.encoding=UTF-8</argLine><!-- 解决从mvn test中读取测试数据时的中文乱码问题 -->
          <includes>
            <include>**/*Test.*</include>
            <include>**/*ColumnarExistenceJoinSuite.*</include>
            <include>**/Test*.*</include>
          </includes>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.scalatest</groupId>
        <artifactId>scalatest-maven-plugin</artifactId>
        <version>${scalatest-maven-plugin.version}</version>
        <configuration>
          <testFailureIgnore>false</testFailureIgnore>
          <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
          <junitxml>.</junitxml>
          <filereports>WDF TestSuite.txt</filereports> <!-- Output file for test results -->
          <!-- Add ScalaTest options here -->
          <stdout>F</stdout> <!-- 'F' means full stack traces -->
        </configuration>
        <executions>
          <execution>
            <id>test</id>
            <goals>
              <goal>test</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
