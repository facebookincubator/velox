# Copyright (c) Facebook, Inc. and its affiliates.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
--- a/folly/detail/ThreadLocalDetail.h
+++ b/folly/detail/ThreadLocalDetail.h
@@ -109,7 +109,7 @@ struct ElementWrapper {
     }
     auto const fun =
         +[](void* pt, TLPDestructionMode) { delete static_cast<Ptr>(pt); };
-    auto const raw = reinterpret_cast<uintptr_t>(fun);
+    auto const raw = reinterpret_cast<uintptr_t>(std::launder(reinterpret_cast<char*>(fun)));
     if (raw & deleter_all_mask) {
       return set(p, std::ref(*fun));
     }
@@ -132,7 +132,7 @@ struct ElementWrapper {
       d(static_cast<Ptr>(pt), mode);
     });
     guard.dismiss();
-    auto const raw = reinterpret_cast<uintptr_t>(obj);
+    auto const raw = reinterpret_cast<uintptr_t>(std::launder(reinterpret_cast<char*>(obj)));
     DCHECK_EQ(0, raw & deleter_all_mask);
     deleter = raw | deleter_obj_mask;
     ptr = p;
