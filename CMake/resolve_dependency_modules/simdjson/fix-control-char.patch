diff --git a/src/fallback.cpp b/src/fallback.cpp
index f8e87be0..1bbbd67a 100644
--- a/src/fallback.cpp
+++ b/src/fallback.cpp
@@ -130,7 +130,6 @@ simdjson_inline bool validate_string() {
     } else if (simdjson_unlikely(buf[idx] & 0x80)) {
       validate_utf8_character();
     } else {
-      if (buf[idx] < 0x20) { error = UNESCAPED_CHARS; }
       idx++;
     }
   }
diff --git a/src/generic/stage1/json_structural_indexer.h b/src/generic/stage1/json_structural_indexer.h
index cfdedf01..d7c58816 100644
--- a/src/generic/stage1/json_structural_indexer.h
+++ b/src/generic/stage1/json_structural_indexer.h
@@ -243,7 +243,6 @@ simdjson_inline void json_structural_indexer::next(const simd::simd8x64<uint8_t>
 #endif
   indexer.write(uint32_t(idx-64), prev_structurals); // Output *last* iteration's structurals to the parser
   prev_structurals = block.structural_start();
-  unescaped_chars_error |= block.non_quote_inside_string(unescaped);
 }
 
 simdjson_inline error_code json_structural_indexer::finish(dom_parser_implementation &parser, size_t idx, size_t len, stage1_mode partial) {
