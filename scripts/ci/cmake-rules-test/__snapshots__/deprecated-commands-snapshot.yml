# Copyright (c) Facebook, Inc. and its affiliates.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
id: deprecated-commands
snapshots:
  ? |
    # Deprecated commands with complex arguments
    install_files(
        /usr/local/include
        FILES
        header1.h
        header2.h
    )
  : labels:
      - source: |-
          install_files(
              /usr/local/include
              FILES
              header1.h
              header2.h
          )
        style: primary
        start: 45
        end: 122
  ? |-
    # Mixed with modern commands - deprecated ones should still trigger
    add_executable(myapp main.cpp)
    install(TARGETS myapp DESTINATION bin)
    install_programs(/usr/bin script.sh)  # This line should trigger
  : labels:
      - source: install_programs(/usr/bin script.sh)
        style: primary
        start: 138
        end: 174
  ? |
    # Mixed with modern commands - deprecated ones should still trigger
    add_executable(myapp main.cpp)
    install(TARGETS myapp DESTINATION bin)
    install_programs(/usr/bin script.sh)  # This line should trigger
  : labels:
      - source: install_programs(/usr/bin script.sh)
        style: primary
        start: 138
        end: 174
  ? |
    # Multiple deprecated commands in one file
    cmake_minimum_required(VERSION 3.10)
    project(TestProject)
    make_directory(${CMAKE_BINARY_DIR}/temp)
    exec_program(date OUTPUT_VARIABLE CURRENT_DATE)
    write_file(${CMAKE_BINARY_DIR}/info.txt "Build date: ${CURRENT_DATE}")
  : labels:
      - source: make_directory(${CMAKE_BINARY_DIR}/temp)
        style: primary
        start: 101
        end: 141
  build_name(BUILD_NAME):
    labels:
      - source: build_name(BUILD_NAME)
        style: primary
        start: 0
        end: 22
  ? |
    cmake_minimum_required(VERSION 3.10)
    project(TestProject)
    link_directories(/usr/local/lib)
  : labels:
      - source: link_directories(/usr/local/lib)
        style: primary
        start: 58
        end: 90
  exec_program(ls ARGS "-la" OUTPUT_VARIABLE LS_OUTPUT):
    labels:
      - source: exec_program(ls ARGS "-la" OUTPUT_VARIABLE LS_OUTPUT)
        style: primary
        start: 0
        end: 53
  export_library_dependencies(deps.cmake):
    labels:
      - source: export_library_dependencies(deps.cmake)
        style: primary
        start: 0
        end: 39
  install_files(/usr/include FILES config.h):
    labels:
      - source: install_files(/usr/include FILES config.h)
        style: primary
        start: 0
        end: 42
  install_programs(/usr/bin FILES script.sh):
    labels:
      - source: install_programs(/usr/bin FILES script.sh)
        style: primary
        start: 0
        end: 42
  install_targets(/usr/bin myapp):
    labels:
      - source: install_targets(/usr/bin myapp)
        style: primary
        start: 0
        end: 31
  ? |
    link_directories(
        /opt/lib
        /usr/lib64
    )
  : labels:
      - source: |-
          link_directories(
              /opt/lib
              /usr/lib64
          )
        style: primary
        start: 0
        end: 47
  ? |
    link_directories(${CMAKE_BINARY_DIR}/lib)
  : labels:
      - source: link_directories(${CMAKE_BINARY_DIR}/lib)
        style: primary
        start: 0
        end: 41
  link_directories(/usr/local/lib):
    labels:
      - source: link_directories(/usr/local/lib)
        style: primary
        start: 0
        end: 32
  load_command(COMMAND mycommand src/mycommand.c):
    labels:
      - source: load_command(COMMAND mycommand src/mycommand.c)
        style: primary
        start: 0
        end: 47
  make_directory(${CMAKE_BINARY_DIR}/output):
    labels:
      - source: make_directory(${CMAKE_BINARY_DIR}/output)
        style: primary
        start: 0
        end: 42
  output_required_files(main.cpp deps.txt):
    labels:
      - source: output_required_files(main.cpp deps.txt)
        style: primary
        start: 0
        end: 40
  qt_wrap_cpp(MOC_SOURCES widget.h):
    labels:
      - source: qt_wrap_cpp(MOC_SOURCES widget.h)
        style: primary
        start: 0
        end: 33
  qt_wrap_ui(UI_SOURCES dialog.ui):
    labels:
      - source: qt_wrap_ui(UI_SOURCES dialog.ui)
        style: primary
        start: 0
        end: 32
  ? |
    set(MY_LIST a b c d)
    remove(MY_LIST c)
  : labels:
      - source: remove(MY_LIST c)
        style: primary
        start: 21
        end: 38
  subdir_depends(src mylib):
    labels:
      - source: subdir_depends(src mylib)
        style: primary
        start: 0
        end: 25
  subdirs(src tests docs):
    labels:
      - source: subdirs(src tests docs)
        style: primary
        start: 0
        end: 23
  use_mangled_mesa(ON):
    labels:
      - source: use_mangled_mesa(ON)
        style: primary
        start: 0
        end: 20
  utility_source(UTILITY_NAME src/utility.c):
    labels:
      - source: utility_source(UTILITY_NAME src/utility.c)
        style: primary
        start: 0
        end: 42
  variable_requires(VAR FOO BAR):
    labels:
      - source: variable_requires(VAR FOO BAR)
        style: primary
        start: 0
        end: 30
  write_file(${CMAKE_BINARY_DIR}/config.h "#define VERSION 1.0"):
    labels:
      - source: write_file(${CMAKE_BINARY_DIR}/config.h "#define VERSION 1.0")
        style: primary
        start: 0
        end: 62
